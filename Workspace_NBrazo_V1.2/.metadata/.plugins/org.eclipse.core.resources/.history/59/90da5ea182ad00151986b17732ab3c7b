#include "Mef_Menu.h"
//#include "main.h"



/*
	uint16_t seguir0, seguir1, seguir2,seguir3, seguir4, seguir5, seguir6;
	uint8_t cursor1, tecla0, tecla1, tecla2, tecla3, tecla4, tecla5, tecla6, tecla7, old_cursor1;
	uint8_t cursor2, old_cursor2;*/
/*
uint8_t MedTie, NumEje, Sensibilidad,Sensor, old_cursor1,cursor1;


uint8_t ,NumMedi;
uint16_t CantMedici,Diviso,salid;
char *mens,*coso,*stringMemory,*aux;
float **AceEnvio;
volatile int16_t ** AceleDecibel;*/
uint8_t Sensor,old_cursor1,cursor1;
volatile uint32_t SysTickCount;
uint32_t contador10,Contador;
Menus Menu_seleccionado,Menu_medir;
Teclas_Menu tecla_membrana;
uint16_t CantMedici,salid;
char *mens,*coso,*stringMemory,*aux;
uint8_t Sensibilidad,MedTie;
const uint8_t VecTMedicion[3]={3,30,120};
uint16_t TMedicion;
//uint16_t Max_Mediciones=29;
//Funciones

void Incializar_variables_locales(){

/*
	CantMedici=Getter_Variables_uint16(5);
	NumMedi=Getter_Variables_uint8(1);
	Diviso=Getter_Variables_uint16(1);
	Sensibilidad=0;
	Sensor=1;	//Cuerpo Entero

	MedTie=0;*/
	cursor1=1;
	Sensor=1;	//Cuerpo Entero
    SysTickCount=0;
    Sensibilidad=0;
    MedTie=0;
    TMedicion=VecTMedicion[MedTie];

}



void Rutina_Medicion(){

	int estado_medicion=0;
	//CantMedici=Getter_Variables_uint16(5);

	PresentaTMedicion(Sensor);

	tecla_membrana=Teclado();
	switch(tecla_membrana){
		case CANCEL:{

			GUI_Window_Draw ( "Menu" );
			Posicion_Flecha(cursor1,old_cursor1);
			Tiempito(1);
			estado_medicion=1;
			Menu_seleccionado=PRINCIPAL;

		}
		break;
		case ABAJO:{
			if(Sensibilidad){
				Sensibilidad=0;
			}else{
				Sensibilidad=1;
			}
			Tiempito(5);
		}
		break;
		case ARRIBA:{
			MedTie++;
			if(MedTie==3) MedTie=0;
			TMedicion=VecTMedicion[MedTie];
			Tiempito(5);
		}
		break;
		case ENTER:{
			Tiempito(5);
			GUI_Window_Draw ( "Credit2" );	// Pantalla confirma

			do{
				tecla_membrana=Teclado();
				switch (tecla_membrana){
					case CANCEL:	// cancel sale
						GUI_Window_Draw ( "Menu" );
						Posicion_Flecha(cursor1,old_cursor1);
						Tiempito(1);
						estado_medicion=1;
						Menu_seleccionado=PRINCIPAL;

					break;
					case ENTER:

						Medir(Sensibilidad);
						estado_medicion=0;
						//GUI_Window_Draw ( "Atencion" );
						//Tiempito(25);
						do{
							tecla_membrana=Teclado();
							switch (tecla_membrana){

							case ENTER:
								CantMedici=Getter_Variables_uint16(5);//Se fija en la variable Cnatidad_de_Mediciones en Funciones.c
								if(CantMedici<Max_Mediciones){

								Grabacion(Sensor,Sensibilidad);
								estado_medicion=1;
								}else{
										GUI_Window_Draw ( "Atencion" );
										Tiempito(25);
								}
							break;
							case CANCEL: // cancel sale
								estado_medicion=1;
							break;
							}
							/*
							if(tecla_membrana==ENTER){//Enter graba
								Medir(Sensibilidad);
								if(CantMedici<Max_Mediciones){

							//		Grabacion(Sensor,Sensibilidad);
								}else{
								//	GUI_Window_Draw ( "Atencion" );
								//	Tiempito(25);

								}
								estado_medicion=1;
							}*/
						}
						while(estado_medicion!=1);
						GUI_Window_Draw ( "Menu" );
						Posicion_Flecha(cursor1,old_cursor1);
						Tiempito(5);
						Menu_seleccionado=PRINCIPAL;
					break;
				}
			}while(estado_medicion!=1);
		}
		break;


	}



}

void Medir(uint8_t Sensibilidad){
	//mens=Getter_Array_char(0);
	CantMedici=Getter_Variables_uint16(5);
	char mensj[20];
	if(Sensibilidad) Apaga_Salida_Seisg();  // Apaga salida de +/- 6G
	if(Sensibilidad) Apaga_Salida_Unopcincog(); // Apaga salida +/- 1.5G
	GUI_Window_Draw ( "Dimmer" );
	GUI_Text_Draw_In_Dimmer("3 seg.  ", WHITE, BLACK,40,30);
	Tiempito(10);
	GUI_Text_Draw_In_Dimmer("2 seg.  ", WHITE, BLACK,40,30);
	Tiempito(10);
	GUI_Text_Draw_In_Dimmer("1 seg.  ", WHITE, BLACK,40,30);
	Tiempito(10);
	GUI_Text_Draw_In_Dimmer("Midiendo ... ", WHITE, BLACK,25,30);
	LargaMedicion(TMedicion,Sensor,Sensibilidad);
	if(!Sensor) Tiempito(15);
	GUI_Window_Draw ( "Credit4" );
	PresentaResultados(Sensor);	// valores rms
	EsperaTecla();
	PresentaGrafico(0,Sensor);	// gráfico decibeles
	EsperaTecla();
	GUI_Window_Draw ( "Credit5" );
	itoa(CantMedici,mensj);
	GUI_Text_Draw_In_Credits5(mensj, WHITE, BLACK,111,19);
	Tiempito(10);

}

void Rutina_Remoto(){
	/*
	CantMedici=Getter_Variables_uint16(5);
	stringMemory=Getter_Array_char(2);
	MiraUART1(Sensor);
	CantMedici=Getter_Variables_uint16(5);
	*/

	tecla_membrana=Teclado();

	if(tecla_membrana==0){
		GUI_Text_Draw_In_Dimmer("Rutina Remoto ", WHITE, BLACK,40,30);
		Tiempito(20);
		//MiraUART1(Sensor);
		//CantMedici=Getter_Variables_uint16(5);

	}else{
		GUI_Window_Draw ( "Menu" );
		Posicion_Flecha(cursor1,old_cursor1);
		Tiempito(1);
		Menu_seleccionado=PRINCIPAL;
	}

}
void Rutina_Presenta_Anterior(){

	uint8_t NumMedicion=0,NumEje=0;
	//aux=Getter_Array_char(3);
	char mensaje[20];
	char coso_leido[2];
	char auxi[10];
	char menss[20];
	int estado_presenta_anterior=0;
	coso=Getter_Array_char(1);
	coso_leido[0]=*(coso+0);
	coso_leido[1]=*(coso+1);
	CantMedici=Getter_Variables_uint16(5);
	itoa(CantMedici,coso_leido);
	if(CantMedici<10){
		strcpy(auxi,"/0");
	}else{
		strcpy(auxi,"/");
		}
	strcat(auxi,coso_leido);

	do{


	Tiempito(1);
    strcpy(menss,"");
	if(NumMedicion<9) strcpy(mensaje,"0");
	itoa(NumMedicion+1,coso_leido);
	strcat(mensaje,coso_leido);
	strcat(mensaje,aux);
	GUI_Text_Draw_In_Credits5(mensaje, WHITE, BLACK,90,19);

	if(CantMedici==0){
		GUI_Text_Draw_In_Credits5("VACIA", WHITE, BLACK,90,19);
		Tiempito(3);
	}else{

		tecla_membrana=Teclado();
		switch(tecla_membrana){

		case CANCEL:	// cancel sale
			GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
			Posicion_Flecha(cursor1,old_cursor1);
			Tiempito(1);
			Menu_seleccionado=PRINCIPAL;
		break;
		case ABAJO:
			/*if(NumMedicion>0){
				NumMedicion--;
				}else{
					NumMedicion=CantMedici-1;
					}*/
		break;
		case ARRIBA:
			/*if(NumMedicion<CantMedici-1){
				NumMedicion++;
				}else{
					NumMedicion=0;
				}*/
		break;
		case ENTER: // Presenta anterior
			Presenta_Anterior();
		break;

		}
	}
	}while(estado_presenta_anterior=0);


}
void PresentaTMedicion(uint8_t Sensor){

	//mens=Getter_Array_char(0);
	char aux[10];//=Getter_Array_char(3);
	char mensj[20];
	LPC_GPIO2->FIOMASK = (~(1<<13));
	salid=LPC_GPIO2->FIOPIN;
	if(salid){
		strcpy(mensj,"CUERPO ENTERO");
		Sensor=1;
	}
	else{
		strcpy(mensj,"BRAZ0");
		Sensor=0;
	}
	GUI_Text_Draw_In_Credits (mensj, WHITE, BLACK, 45,11);
	itoa(TMedicion,aux);
	if(TMedicion<10) strcpy(mensj,"00");
	if(TMedicion>10 && TMedicion<100) strcpy(mensj,"0");
	if(TMedicion>100) strcpy(mensj,"");
	strcat(mensj,aux);
	GUI_Text_Draw_In_Credits (mensj, WHITE, BLACK, 95,21);
	if(Sensibilidad){
		strcpy(mensj,"ALTA");
	}
	else{
		strcpy(mensj,"BAJA");
	}
	GUI_Text_Draw_In_Credits (mensj, WHITE, BLACK, 85,31);
	//GUI_Text_Draw_In_Menu (" EStoy en MED ", WHITE, BLACK, 85,31);
}
void Presenta_Anterior(){


	uint8_t estado=0;

	int j;

	//uint8_t NumMedicion=Getter_Variables_uint8(1);
	//strcpy(mens,"EJE:");
	GUI_Text_Draw_In_Credits5("EJE:", WHITE, BLACK,40,29);

	Tiempito(5);
	GUI_Text_Draw_In_Credits5("Z", WHITE, BLACK,70,29);
	Tiempito(5);
    GUI_Text_Draw_In_Credits5("X", WHITE, BLACK,70,29);
    Tiempito(5);
    GUI_Text_Draw_In_Credits5("Y", WHITE, BLACK,70,29);
    Tiempito(5);
	do{

		tecla_membrana=Teclado();
		switch(tecla_membrana){
		case CANCEL:{ // cancel sale
			estado=1;
			GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
		    Posicion_Flecha(cursor1,old_cursor1);
		    Tiempito(1);
			Menu_seleccionado=PRINCIPAL;
		}
		break;
		case ABAJO:
		case ARRIBA:{
		//	NumEje++;
			//if(NumEje>2) NumEje=0;
		//	Tiempito(5);
		}
			break;
		case ENTER:
		{
			//LevantaMedicion(NumMedicion,Sensor);
			//for(j=0;j<3;j++){
			//	CalculaDecibeles(j);
			//	CalculoRMS(j,Sensor);
		//	}
			GUI_Window_Draw ( "Credit4" );
			PresentaResultados(Sensor);
			//Tiempito(10);
			EsperaTecla();//FIXME
			//PresentaGrafico(NumEje,Sensor);	// gráfico decibeles
			Tiempito(10);
			EsperaTecla();//FIXME
			GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
			Posicion_Flecha(cursor1,old_cursor1);
			Tiempito(1);
			Menu_seleccionado=PRINCIPAL;
			estado=1;
		}
		}
		break;
	}while(estado!=1);
}


void Rutina_Borrar_Memoria(){

	int estado=0;

	//CantMedici=Getter_Variables_uint16(5);
	do{
		tecla_membrana=Teclado();
		switch (tecla_membrana){ 	// se pulsa una tecla en Confirma Medición
			case CANCEL:	// CANCEL SALE SIN HACER NADA
				GUI_Window_Draw ( "Menu" );
				Posicion_Flecha(cursor1,old_cursor1);
				Tiempito(1);
				estado=1;
				Menu_seleccionado=PRINCIPAL;

				break;
			case ENTER:	// ENTER BORRA MEMORIA

				BorraMemoria();
				BorraYGraba();
				CantMedici=0;
				GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
				Posicion_Flecha(cursor1,old_cursor1);
				Tiempito(1);
				estado=1;
				Menu_seleccionado=PRINCIPAL;
			break;
		}
	}while (estado!=1);

}

// Window "Home"	PANTALLA PRESENTACION
// Window "Credits" PANTALLA DATALOGGER
// Window "Dimmer"  PANTALLA PRINCIPAL
// Window "Menu"	PANTALLA MENU INICIAL
// Window "Example" PANTALLA APAGADO
void Rutina_Principal(){


	old_cursor1 = cursor1;
	tecla_membrana=Teclado();

	switch(tecla_membrana){
		case CANCEL:{

			GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
			Tiempito(1);
			Posicion_Flecha(cursor1,old_cursor1);
			Menu_seleccionado=PRINCIPAL;

		}
		break;

		case ABAJO:{
			Contador=0;//Contador de espera para apagar
			cursor1 ++;
			Tiempito(1);
			if(cursor1>5){
				cursor1=1;
				Menu_seleccionado=PRINCIPAL;
			}
			Posicion_Flecha(cursor1,old_cursor1);
		break;
		case ARRIBA:{
			Contador=0;//Contador de espera para apagar
			cursor1 --;
			Tiempito(1);
			if(cursor1<1) {
				cursor1=5;
			}

			Posicion_Flecha(cursor1,old_cursor1);
			Menu_seleccionado=PRINCIPAL;

		}
		break;
		case ENTER:{
			Contador=0;//Contador de espera para apagar
			Menu_seleccionado=cursor1;
			Seleccion_Menus(Menu_seleccionado);

		}
		break;

		}

	}


}

void Seleccion_Menus(int Menu){
	/*
	coso=Getter_Array_char(1);
	CantMedici=Getter_Variables_uint16(5);
	uint8_t NumMedicion=Getter_Variables_uint8(1);
	aux=Getter_Array_char(3);*/

	switch(Menu){
		case MEDICION:{

			GUI_Window_Draw ( "Credits" );	// PANTALLA MEDICION
			Tiempito(5);
			Menu_seleccionado=MEDICION;
		}
		break;

		case REMOTO:{

			GUI_Window_Draw ( "Credit3" ); // PANTALLA COMUNICACION
			Menu_seleccionado=REMOTO;
		}
		break;
		case VER_ANTERIORES:{
		//int CantMedici=0;
			CantMedici=Getter_Variables_uint16(5);

			GUI_Window_Draw ( "Anterior" );
			Tiempito(5);
			if(CantMedici<1){
				GUI_Text_Draw_In_Credits5("VACIA", WHITE, BLACK,80,19);
				Tiempito(20);
				GUI_Window_Draw ( "Menu" ); // PANTALLA PRINCIPAL
				Posicion_Flecha(cursor1,old_cursor1);
				Tiempito(1);
				Menu_seleccionado=PRINCIPAL;
			}else {

				Menu_seleccionado=VER_ANTERIORES;
	 	 	 }

		 }
		break;
		case BORRAR_MEMORIA:{
			Tiempito(5);
			GUI_Window_Draw ( "Credit2" );	// Pantalla confirma
			Menu_seleccionado=BORRAR_MEMORIA;

		}
		break;
		case SALIR:{
			Menu_seleccionado=SALIR;

		}
		break;

		default:{

			Menu_seleccionado=PRINCIPAL;
		}
		break;

	}

}
void Rutina_Salir(){

	GUI_Window_Draw ( "Example" ); // PANTALLA APAGADO
	Tiempito(10);
	int k=0;
	for(k=0;k<20;k++){
		LPC_GPIO2->FIOMASK = (~(1<<7));
		LPC_GPIO2->FIOCLR = (1 << 7); // apaga el led
		Tiempito(5);
	}
}

void SysTick_Handler(void)
{

	SysTickCount++; 				/* increment counter necessary in Delay()*/
    if(SysTickCount>Tiempo_Espera){
    	Rutina_Salir();
    	SysTickCount=0;

    }
}

void Mef_Init(){

	Sensor=1;	//Cuerpo Entero
	SystemCoreClockUpdate();
	SysTick_Config( SystemCoreClock / TICKRATE_HZ);
	//TMedicion=VecTMedicion[MedTie];
	Posicion_Flecha(cursor1,old_cursor1);
	Menu_seleccionado=PRINCIPAL;
	contador10=0;
	Contador=0;
	CantMedici=0;

}

void ActualizarMef(){

	switch(Menu_seleccionado){
		case PRINCIPAL:{
			Contador++;
			if(Contador>Tiempo_Espera){
				Contador=0;
				Rutina_Salir();
			}else Rutina_Principal();
		}
		break;
		case MEDICION:{

			Contador=0;
			Rutina_Medicion();

		}
		break;
		case REMOTO:{
			Contador=0;
			Rutina_Remoto();
		}

		break;

		case VER_ANTERIORES:{
			Contador=0;
			Rutina_Presenta_Anterior();

		}
		break;
		case BORRAR_MEMORIA:{
			Contador=0;
			Rutina_Borrar_Memoria();
		}
		break;
		case SALIR:{

			Rutina_Salir();

		}
		break;


	}

}


