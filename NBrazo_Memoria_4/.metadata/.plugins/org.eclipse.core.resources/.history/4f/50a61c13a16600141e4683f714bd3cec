/*
   ********************* Authors *********************
   ***** Laboratorio de Sistemas Embebidos (LSE) *****
   *****    http://laboratorios.fi.uba.ar/lse    *****
   ******************* 20/12/2011 ********************
     Ezequiel Esp√≥sito <ezequiel.esposito@gmail.com>
         Alan Kharsansky <akharsa@gmail.com>
       Federico Roasio <federoasio@gmail.com>
     Daniel Schermuk <daniel.schermuk@gmail.com>
   ***************************************************
*/


#ifdef __USE_CMSIS
#include "LPC17xx.h"
#endif


#include "freq.h"
#include "adc.h"
#include "debug.h"
#include "small_systick.h"
#include <stdint.h>
#include "uart.h"

#include <string.h>

#include "definitions.h"

#include <stdint.h>
#include <GLCDPrimitives.h>
#include <GLCDLowLevel.h>
#include <GLCDColor.h>
#include "rtc.h"
#include "iap_driver.h"

#define CONFIG_FLASH_OFFSET            0x0000F000
#define CONFIG_FLASH_SECTOR            (CONFIG_FLASH_OFFSET >> 12)
#define CONFIG_FLASH_SECTOR_SIZE    1

#define READ_FLASH(object, adr) (*((object volatile *) (adr)))

#define LARGO 999
#define CAMPO 50

volatile uint32_t SysTickCount;		/* counts 10ms timeTicks */
uint32_t DelayStart_SysTickCount;

uint32_t volt, lectura, k,j,w;
uint16_t val, val1, HRentera, NumPantalla, TMuestreo, ModoData;
uint8_t TempeEntera[40][3];
uint8_t CantMediciones, Calibracion;
uint16_t Dia, Mes, Year, Hora, Minutos, Segundos;  // Para seteo

float Factor[5];  // Pendiente de la recta Temperatura vs. Raw
uint32_t Raw0[5];        // Ordenada al origen de la misma Temp. vs Raw

extern volatile uint32_t UART1Count;
extern volatile uint8_t UART1Buffer[BUFSIZE];

volatile uint16_t promedio;
volatile uint32_t inicio,final;

volatile int8_t MatrizHR[41][17];
uint32_t LeePesado[5];

const char* welcomeMsg = "SQue programon2:W";
const char* saltolinea = "\n";
const char* carreturn = "\r";
//const char* saltolinea = 10;
//const char* carreturn = 13;
const char* coma = ",";

char mens3[20], FechaHora[50];
char aux[10];
char cadena [2*LARGO];
static char stringMemory[4*LARGO];
char estafeta[50];
float TBS, TBH, TG, HR, TGBHIn, TGBHOut;
uint16_t AN, ME, DI, HO, MI, SE;
uint8_t FH[15];
uint16_t m;
uint32_t diferencia;
uint16_t c,q,Dale;
RTCTime local_time, alarm_time, current_time;
uint16_t coso1, encendido;
__e_iap_status iap_status;

volatile static uint16_t coso2;

void MiraUART1(void);

void GLCD_Bmp (unsigned char *bmp) {
  unsigned int   j;
  unsigned short *bitmap_ptr = (unsigned short *)bmp;
  j=0;
  strcpy(cadena,"");
//  for (j = 0; j < 2*LARGO; j++) {
  while((bitmap_ptr != NULL) && (j<2*LARGO)){
	  //	  demo_messg_blank[j]=*bitmap_ptr++;
	  cadena[j++]=*bitmap_ptr++;
  }
}


char* itoa(int i, char b[]){
    char const digit[] = "0123456789";
    char* p = b;
    if(i<0){
        *p++ = '-';
        i *= -1;
    }
    int shifter = i;
    do{ //Move to where representation ends
        ++p;
        shifter = shifter/10;
    }while(shifter);
    *p = '\0';
    do{ //Move back, inserting digits as u go
        *--p = digit[i%10];
        i = i/10;
    }while(i);
    return b;
}

void CargaMatriz(void)
{
   int a,b;
   for(b=0;b<41;b++){
         for(a=0;a<17;a++){

             MatrizHR[b][a]=0;
         }
   }
         MatrizHR[0][0]=94;MatrizHR[0][1]=88;MatrizHR[0][2]=82;MatrizHR[0][3]=76;
         MatrizHR[0][4]=71;MatrizHR[0][5]=65;MatrizHR[0][6]=60;MatrizHR[0][7]=54;
         MatrizHR[0][8]=49;MatrizHR[0][9]=44;MatrizHR[0][10]=39;MatrizHR[0][11]=34;
         MatrizHR[0][12]=29;MatrizHR[0][13]=24;MatrizHR[0][14]=19;MatrizHR[0][15]=14;
         MatrizHR[0][16]=10;

         MatrizHR[1][0]=94;MatrizHR[1][1]=88;MatrizHR[1][2]=82;MatrizHR[1][3]=77;
         MatrizHR[1][4]=72;MatrizHR[1][5]=66;MatrizHR[1][6]=61;MatrizHR[1][7]=56;
         MatrizHR[1][8]=51;MatrizHR[1][9]=46;MatrizHR[1][10]=41;MatrizHR[1][11]=36;
         MatrizHR[1][12]=31;MatrizHR[1][13]=27;MatrizHR[1][14]=22;MatrizHR[1][15]=17;
         MatrizHR[1][16]=13;

         MatrizHR[2][0]=94;MatrizHR[2][1]=88;MatrizHR[2][2]=83;MatrizHR[2][3]=78;
         MatrizHR[2][4]=72;MatrizHR[2][5]=67;MatrizHR[2][6]=62;MatrizHR[2][7]=57;
         MatrizHR[2][8]=52;MatrizHR[2][9]=48;MatrizHR[2][10]=43;MatrizHR[2][11]=38;
         MatrizHR[2][12]=34;MatrizHR[2][13]=29;MatrizHR[2][14]=25;MatrizHR[2][15]=20;
         MatrizHR[2][16]=16;

         MatrizHR[3][0]=94;MatrizHR[3][1]=89;MatrizHR[3][2]=84;MatrizHR[3][3]=78;
         MatrizHR[3][4]=73;MatrizHR[3][5]=68;MatrizHR[3][6]=63;MatrizHR[3][7]=59;
         MatrizHR[3][8]=54;MatrizHR[3][9]=49;MatrizHR[3][10]=45;MatrizHR[3][11]=40;
         MatrizHR[3][12]=36;MatrizHR[3][13]=31;MatrizHR[3][14]=27;MatrizHR[3][15]=23;
         MatrizHR[3][16]=19;

         MatrizHR[4][0]=94;MatrizHR[4][1]=89;MatrizHR[4][2]=84;MatrizHR[4][3]=79;
         MatrizHR[4][4]=74;MatrizHR[4][5]=69;MatrizHR[4][6]=65;MatrizHR[4][7]=60;
         MatrizHR[4][8]=55;MatrizHR[4][9]=51;MatrizHR[4][10]=46;MatrizHR[4][11]=42;
         MatrizHR[4][12]=38;MatrizHR[4][13]=34;MatrizHR[4][14]=29;MatrizHR[4][15]=25;
         MatrizHR[4][16]=21;

         MatrizHR[5][0]=94;MatrizHR[5][1]=89;MatrizHR[5][2]=84;MatrizHR[5][3]=80;
         MatrizHR[5][4]=75;MatrizHR[5][5]=79;MatrizHR[5][6]=66;MatrizHR[5][7]=61;
         MatrizHR[5][8]=57;MatrizHR[5][9]=52;MatrizHR[5][10]=48;MatrizHR[5][11]=44;
         MatrizHR[5][12]=40;MatrizHR[5][13]=36;MatrizHR[5][14]=32;MatrizHR[5][15]=28;
         MatrizHR[5][16]=24;

         MatrizHR[6][0]=95;MatrizHR[6][1]=90;MatrizHR[6][2]=85;MatrizHR[6][3]=80;
         MatrizHR[6][4]=76;MatrizHR[6][5]=71;MatrizHR[6][6]=67;MatrizHR[6][7]=62;
         MatrizHR[6][8]=58;MatrizHR[6][9]=54;MatrizHR[6][10]=50;MatrizHR[6][11]=45;
         MatrizHR[6][12]=41;MatrizHR[6][13]=37;MatrizHR[6][14]=34;MatrizHR[6][15]=30;
         MatrizHR[6][16]=26;

         MatrizHR[7][0]=95;MatrizHR[7][1]=90;MatrizHR[7][2]=85;MatrizHR[7][3]=81;
         MatrizHR[7][4]=76;MatrizHR[7][5]=72;MatrizHR[7][6]=68;MatrizHR[7][7]=63;
         MatrizHR[7][8]=59;MatrizHR[7][9]=55;MatrizHR[7][10]=51;MatrizHR[7][11]=47;
         MatrizHR[7][12]=43;MatrizHR[7][13]=39;MatrizHR[7][14]=35;MatrizHR[7][15]=32;
         MatrizHR[7][16]=28;

         MatrizHR[8][0]=95;MatrizHR[8][1]=90;MatrizHR[8][2]=86;MatrizHR[8][3]=81;
         MatrizHR[8][4]=77;MatrizHR[8][5]=73;MatrizHR[8][6]=68;MatrizHR[8][7]=64;
         MatrizHR[8][8]=60;MatrizHR[8][9]=56;MatrizHR[8][10]=52;MatrizHR[8][11]=48;
         MatrizHR[8][12]=45;MatrizHR[8][13]=41;MatrizHR[8][14]=37;MatrizHR[8][15]=34;
         MatrizHR[8][16]=30;


         MatrizHR[9][0]=95;MatrizHR[9][1]=90;MatrizHR[9][2]=86;MatrizHR[9][3]=82;
         MatrizHR[9][4]=77;MatrizHR[9][5]=73;MatrizHR[9][6]=69;MatrizHR[9][7]=65;
         MatrizHR[9][8]=61;MatrizHR[9][9]=57;MatrizHR[9][10]=54;MatrizHR[9][11]=50;
         MatrizHR[9][12]=46;MatrizHR[9][13]=42;MatrizHR[9][14]=39;MatrizHR[9][15]=35;
         MatrizHR[9][16]=32;


         MatrizHR[10][0]=95;MatrizHR[10][1]=91;MatrizHR[10][2]=86;MatrizHR[10][3]=82;
         MatrizHR[10][4]=78;MatrizHR[10][5]=74;MatrizHR[10][6]=70;MatrizHR[10][7]=66;
         MatrizHR[10][8]=62;MatrizHR[10][9]=58;MatrizHR[10][10]=55;MatrizHR[10][11]=51;
         MatrizHR[10][12]=47;MatrizHR[10][13]=44;MatrizHR[10][14]=40;MatrizHR[10][15]=37;
         MatrizHR[10][16]=34;


         MatrizHR[11][0]=95;MatrizHR[11][1]=91;MatrizHR[11][2]=87;MatrizHR[11][3]=83;
         MatrizHR[11][4]=79;MatrizHR[11][5]=75;MatrizHR[11][6]=71;MatrizHR[11][7]=67;
         MatrizHR[11][8]=63;MatrizHR[11][9]=59;MatrizHR[11][10]=56;MatrizHR[11][11]=52;
         MatrizHR[11][12]=49;MatrizHR[11][13]=45;MatrizHR[11][14]=42;MatrizHR[11][15]=39;
         MatrizHR[11][16]=35;

         MatrizHR[12][0]=95;MatrizHR[12][1]=91;MatrizHR[12][2]=87;MatrizHR[12][3]=83;
         MatrizHR[12][4]=79;MatrizHR[12][5]=75;MatrizHR[12][6]=71;MatrizHR[12][7]=68;
         MatrizHR[12][8]=64;MatrizHR[12][9]=60;MatrizHR[12][10]=57;MatrizHR[12][11]=53;
         MatrizHR[12][12]=50;MatrizHR[12][13]=47;MatrizHR[12][14]=43;MatrizHR[12][15]=40;
         MatrizHR[12][16]=37;

         MatrizHR[13][0]=95;MatrizHR[13][1]=91;MatrizHR[13][2]=87;MatrizHR[13][3]=83;
         MatrizHR[13][4]=80;MatrizHR[13][5]=76;MatrizHR[13][6]=72;MatrizHR[13][7]=68;
         MatrizHR[13][8]=65;MatrizHR[13][9]=61;MatrizHR[13][10]=58;MatrizHR[13][11]=54;
         MatrizHR[13][12]=51;MatrizHR[13][13]=48;MatrizHR[13][14]=45;MatrizHR[13][15]=42;
         MatrizHR[13][16]=38;

         MatrizHR[14][0]=95;MatrizHR[14][1]=91;MatrizHR[14][2]=88;MatrizHR[14][3]=84;
         MatrizHR[14][4]=80;MatrizHR[14][5]=76;MatrizHR[14][6]=73;MatrizHR[14][7]=69;
         MatrizHR[14][8]=66;MatrizHR[14][9]=62;MatrizHR[14][10]=59;MatrizHR[14][11]=55;
         MatrizHR[14][12]=52;MatrizHR[14][13]=49;MatrizHR[14][14]=46;MatrizHR[14][15]=43;
         MatrizHR[14][16]=40;

         MatrizHR[15][0]=96;MatrizHR[15][1]=92;MatrizHR[15][2]=88;MatrizHR[15][3]=84;
         MatrizHR[15][4]=80;MatrizHR[15][5]=77;MatrizHR[15][6]=73;MatrizHR[15][7]=70;
         MatrizHR[15][8]=66;MatrizHR[15][9]=63;MatrizHR[15][10]=60;MatrizHR[15][11]=56;
         MatrizHR[15][12]=53;MatrizHR[15][13]=40;MatrizHR[15][14]=47;MatrizHR[15][15]=44;
         MatrizHR[15][16]=41;

         MatrizHR[16][0]=96;MatrizHR[16][1]=92;MatrizHR[16][2]=88;MatrizHR[16][3]=84;
         MatrizHR[16][4]=81;MatrizHR[16][5]=77;MatrizHR[16][6]=74;MatrizHR[16][7]=70;
         MatrizHR[16][8]=67;MatrizHR[16][9]=64;MatrizHR[16][10]=61;MatrizHR[16][11]=57;
         MatrizHR[16][12]=54;MatrizHR[16][13]=51;MatrizHR[16][14]=48;MatrizHR[16][15]=45;
         MatrizHR[16][16]=42;

         MatrizHR[17][0]=96;MatrizHR[17][1]=92;MatrizHR[17][2]=88;MatrizHR[17][3]=85;
         MatrizHR[17][4]=81;MatrizHR[17][5]=78;MatrizHR[17][6]=74;MatrizHR[17][7]=71;
         MatrizHR[17][8]=68;MatrizHR[17][9]=64;MatrizHR[17][10]=61;MatrizHR[17][11]=58;
         MatrizHR[17][12]=55;MatrizHR[17][13]=52;MatrizHR[17][14]=49;MatrizHR[17][15]=46;
         MatrizHR[17][16]=44;

         MatrizHR[18][0]=96;MatrizHR[18][1]=92;MatrizHR[18][2]=88;MatrizHR[18][3]=85;
         MatrizHR[18][4]=82;MatrizHR[18][5]=78;MatrizHR[18][6]=75;MatrizHR[18][7]=72;
         MatrizHR[18][8]=68;MatrizHR[18][9]=65;MatrizHR[18][10]=62;MatrizHR[18][11]=59;
         MatrizHR[18][12]=56;MatrizHR[18][13]=53;MatrizHR[18][14]=50;MatrizHR[18][15]=48;
         MatrizHR[18][16]=45;

         MatrizHR[19][0]=96;MatrizHR[19][1]=92;MatrizHR[19][2]=88;MatrizHR[19][3]=85;
         MatrizHR[19][4]=82;MatrizHR[19][5]=79;MatrizHR[19][6]=75;MatrizHR[19][7]=72;
         MatrizHR[19][8]=69;MatrizHR[19][9]=66;MatrizHR[19][10]=63;MatrizHR[19][11]=60;
         MatrizHR[19][12]=57;MatrizHR[19][13]=54;MatrizHR[19][14]=51;MatrizHR[19][15]=49;
         MatrizHR[19][16]=46;

         MatrizHR[20][0]=96;MatrizHR[20][1]=92;MatrizHR[20][2]=89;MatrizHR[20][3]=86;
         MatrizHR[20][4]=82;MatrizHR[20][5]=79;MatrizHR[20][6]=75;MatrizHR[20][7]=73;
         MatrizHR[20][8]=69;MatrizHR[20][9]=66;MatrizHR[20][10]=63;MatrizHR[20][11]=61;
         MatrizHR[20][12]=58;MatrizHR[20][13]=55;MatrizHR[20][14]=52;MatrizHR[20][15]=49;
         MatrizHR[20][16]=47;

         MatrizHR[21][0]=96;MatrizHR[21][1]=92;MatrizHR[21][2]=89;MatrizHR[21][3]=86;
         MatrizHR[21][4]=82;MatrizHR[21][5]=79;MatrizHR[21][6]=75;MatrizHR[21][7]=73;
         MatrizHR[21][8]=70;MatrizHR[21][9]=67;MatrizHR[21][10]=64;MatrizHR[21][11]=61;
         MatrizHR[21][12]=58;MatrizHR[21][13]=56;MatrizHR[21][14]=53;MatrizHR[21][15]=50;
         MatrizHR[21][16]=48;

         MatrizHR[22][0]=96;MatrizHR[22][1]=93;MatrizHR[22][2]=89;MatrizHR[22][3]=86;
         MatrizHR[22][4]=83;MatrizHR[22][5]=80;MatrizHR[22][6]=77;MatrizHR[22][7]=74;
         MatrizHR[22][8]=71;MatrizHR[22][9]=68;MatrizHR[22][10]=65;MatrizHR[22][11]=62;
         MatrizHR[22][12]=59;MatrizHR[22][13]=57;MatrizHR[22][14]=54;MatrizHR[22][15]=51;
         MatrizHR[22][16]=49;

         MatrizHR[23][0]=96;MatrizHR[23][1]=93;MatrizHR[23][2]=89;MatrizHR[23][3]=86;
         MatrizHR[23][4]=83;MatrizHR[23][5]=80;MatrizHR[23][6]=77;MatrizHR[23][7]=74;
         MatrizHR[23][8]=71;MatrizHR[23][9]=68;MatrizHR[23][10]=65;MatrizHR[23][11]=63;
         MatrizHR[23][12]=60;MatrizHR[23][13]=57;MatrizHR[23][14]=55;MatrizHR[23][15]=52;
         MatrizHR[23][16]=50;

         MatrizHR[24][0]=96;MatrizHR[24][1]=93;MatrizHR[24][2]=90;MatrizHR[24][3]=86;
         MatrizHR[24][4]=83;MatrizHR[24][5]=80;MatrizHR[24][6]=77;MatrizHR[24][7]=74;
         MatrizHR[24][8]=71;MatrizHR[24][9]=69;MatrizHR[24][10]=66;MatrizHR[24][11]=63;
         MatrizHR[24][12]=61;MatrizHR[24][13]=58;MatrizHR[24][14]=55;MatrizHR[24][15]=53;
         MatrizHR[24][16]=50;

         MatrizHR[25][0]=96;MatrizHR[25][1]=93;MatrizHR[25][2]=90;MatrizHR[25][3]=87;
         MatrizHR[25][4]=84;MatrizHR[25][5]=81;MatrizHR[25][6]=78;MatrizHR[25][7]=75;
         MatrizHR[25][8]=72;MatrizHR[25][9]=69;MatrizHR[25][10]=66;MatrizHR[25][11]=64;
         MatrizHR[25][12]=61;MatrizHR[25][13]=59;MatrizHR[25][14]=56;MatrizHR[25][15]=54;
         MatrizHR[25][16]=51;

         MatrizHR[26][0]=96;MatrizHR[26][1]=93;MatrizHR[26][2]=90;MatrizHR[26][3]=87;
         MatrizHR[26][4]=84;MatrizHR[26][5]=81;MatrizHR[26][6]=78;MatrizHR[26][7]=75;
         MatrizHR[26][8]=72;MatrizHR[26][9]=70;MatrizHR[26][10]=67;MatrizHR[26][11]=64;
         MatrizHR[26][12]=62;MatrizHR[26][13]=59;MatrizHR[26][14]=57;MatrizHR[26][15]=54;
         MatrizHR[26][16]=52;

         MatrizHR[27][0]=96;MatrizHR[27][1]=93;MatrizHR[27][2]=90;MatrizHR[27][3]=87;
         MatrizHR[27][4]=84;MatrizHR[27][5]=81;MatrizHR[27][6]=78;MatrizHR[27][7]=76;
         MatrizHR[27][8]=73;MatrizHR[27][9]=70;MatrizHR[27][10]=67;MatrizHR[27][11]=65;
         MatrizHR[27][12]=62;MatrizHR[27][13]=60;MatrizHR[27][14]=57;MatrizHR[27][15]=55;
         MatrizHR[27][16]=53;

         MatrizHR[28][0]=96;MatrizHR[28][1]=93;MatrizHR[28][2]=90;MatrizHR[28][3]=87;
         MatrizHR[28][4]=84;MatrizHR[28][5]=81;MatrizHR[28][6]=79;MatrizHR[28][7]=76;
         MatrizHR[28][8]=73;MatrizHR[28][9]=71;MatrizHR[28][10]=68;MatrizHR[28][11]=65;
         MatrizHR[28][12]=63;MatrizHR[28][13]=60;MatrizHR[28][14]=58;MatrizHR[28][15]=56;
         MatrizHR[28][16]=53;

         MatrizHR[29][0]=96;MatrizHR[29][1]=93;MatrizHR[29][2]=90;MatrizHR[29][3]=87;
         MatrizHR[29][4]=85;MatrizHR[29][5]=82;MatrizHR[29][6]=79;MatrizHR[29][7]=76;
         MatrizHR[29][8]=74;MatrizHR[29][9]=71;MatrizHR[29][10]=68;MatrizHR[29][11]=66;
         MatrizHR[29][12]=63;MatrizHR[29][13]=61;MatrizHR[29][14]=59;MatrizHR[29][15]=56;
         MatrizHR[29][16]=54;

         MatrizHR[30][0]=96;MatrizHR[30][1]=93;MatrizHR[30][2]=90;MatrizHR[30][3]=88;
         MatrizHR[30][4]=85;MatrizHR[30][5]=82;MatrizHR[30][6]=79;MatrizHR[30][7]=77;
         MatrizHR[30][8]=74;MatrizHR[30][9]=71;MatrizHR[30][10]=69;MatrizHR[30][11]=66;
         MatrizHR[30][12]=64;MatrizHR[30][13]=62;MatrizHR[30][14]=59;MatrizHR[30][15]=57;
         MatrizHR[30][16]=55;

         MatrizHR[31][0]=96;MatrizHR[31][1]=94;MatrizHR[31][2]=91;MatrizHR[31][3]=88;
         MatrizHR[31][4]=85;MatrizHR[31][5]=82;MatrizHR[31][6]=80;MatrizHR[31][7]=77;
         MatrizHR[31][8]=74;MatrizHR[31][9]=72;MatrizHR[31][10]=69;MatrizHR[31][11]=67;
         MatrizHR[31][12]=64;MatrizHR[31][13]=62;MatrizHR[31][14]=60;MatrizHR[31][15]=58;
         MatrizHR[31][16]=55;

         MatrizHR[32][0]=97;MatrizHR[32][1]=94;MatrizHR[32][2]=91;MatrizHR[32][3]=88;
         MatrizHR[32][4]=85;MatrizHR[32][5]=82;MatrizHR[32][6]=80;MatrizHR[32][7]=77;
         MatrizHR[32][8]=75;MatrizHR[32][9]=72;MatrizHR[32][10]=70;MatrizHR[32][11]=67;
         MatrizHR[32][12]=65;MatrizHR[32][13]=63;MatrizHR[32][14]=60;MatrizHR[32][15]=58;
         MatrizHR[32][16]=56;

         MatrizHR[33][0]=97;MatrizHR[33][1]=94;MatrizHR[33][2]=91;MatrizHR[33][3]=88;
         MatrizHR[33][4]=85;MatrizHR[33][5]=83;MatrizHR[33][6]=80;MatrizHR[33][7]=77;
         MatrizHR[33][8]=75;MatrizHR[33][9]=72;MatrizHR[33][10]=70;MatrizHR[33][11]=68;
         MatrizHR[33][12]=65;MatrizHR[33][13]=63;MatrizHR[33][14]=61;MatrizHR[33][15]=59;
         MatrizHR[33][16]=56;

         MatrizHR[34][0]=97;MatrizHR[34][1]=94;MatrizHR[34][2]=91;MatrizHR[34][3]=88;
         MatrizHR[34][4]=86;MatrizHR[34][5]=83;MatrizHR[34][6]=80;MatrizHR[34][7]=78;
         MatrizHR[34][8]=75;MatrizHR[34][9]=73;MatrizHR[34][10]=70;MatrizHR[34][11]=68;
         MatrizHR[34][12]=66;MatrizHR[34][13]=64;MatrizHR[34][14]=61;MatrizHR[34][15]=59;
         MatrizHR[34][16]=57;

         MatrizHR[35][0]=97;MatrizHR[35][1]=94;MatrizHR[35][2]=91;MatrizHR[35][3]=88;
         MatrizHR[35][4]=86;MatrizHR[35][5]=83;MatrizHR[35][6]=81;MatrizHR[35][7]=78;
         MatrizHR[35][8]=76;MatrizHR[35][9]=73;MatrizHR[35][10]=71;MatrizHR[35][11]=68;
         MatrizHR[35][12]=66;MatrizHR[35][13]=64;MatrizHR[35][14]=62;MatrizHR[35][15]=60;
         MatrizHR[35][16]=58;

         MatrizHR[36][0]=97;MatrizHR[36][1]=94;MatrizHR[36][2]=91;MatrizHR[36][3]=88;
         MatrizHR[36][4]=86;MatrizHR[36][5]=83;MatrizHR[36][6]=81;MatrizHR[36][7]=78;
         MatrizHR[36][8]=76;MatrizHR[36][9]=73;MatrizHR[36][10]=71;MatrizHR[36][11]=69;
         MatrizHR[36][12]=67;MatrizHR[36][13]=64;MatrizHR[36][14]=62;MatrizHR[36][15]=60;
         MatrizHR[36][16]=58;

         MatrizHR[37][0]=97;MatrizHR[37][1]=94;MatrizHR[37][2]=91;MatrizHR[37][3]=89;
         MatrizHR[37][4]=86;MatrizHR[37][5]=83;MatrizHR[37][6]=81;MatrizHR[37][7]=79;
         MatrizHR[37][8]=76;MatrizHR[37][9]=74;MatrizHR[37][10]=71;MatrizHR[37][11]=69;
         MatrizHR[37][12]=67;MatrizHR[37][13]=65;MatrizHR[37][14]=63;MatrizHR[37][15]=61;
         MatrizHR[37][16]=59;

         MatrizHR[38][0]=97;MatrizHR[38][1]=94;MatrizHR[38][2]=91;MatrizHR[38][3]=89;
         MatrizHR[38][4]=86;MatrizHR[38][5]=84;MatrizHR[38][6]=81;MatrizHR[38][7]=79;
         MatrizHR[38][8]=76;MatrizHR[38][9]=74;MatrizHR[38][10]=72;MatrizHR[38][11]=70;
         MatrizHR[38][12]=67;MatrizHR[38][13]=65;MatrizHR[38][14]=63;MatrizHR[38][15]=61;
         MatrizHR[38][16]=59;

         MatrizHR[39][0]=97;MatrizHR[39][1]=94;MatrizHR[39][2]=91;MatrizHR[39][3]=89;
         MatrizHR[39][4]=86;MatrizHR[39][5]=84;MatrizHR[39][6]=81;MatrizHR[39][7]=79;
         MatrizHR[39][8]=77;MatrizHR[39][9]=74;MatrizHR[39][10]=72;MatrizHR[39][11]=70;
         MatrizHR[39][12]=68;MatrizHR[39][13]=66;MatrizHR[39][14]=63;MatrizHR[39][15]=61;
         MatrizHR[39][16]=59;

         MatrizHR[40][0]=97;MatrizHR[40][1]=94;MatrizHR[40][2]=92;MatrizHR[40][3]=89;
         MatrizHR[40][4]=86;MatrizHR[40][5]=84;MatrizHR[40][6]=82;MatrizHR[40][7]=79;
         MatrizHR[40][8]=77;MatrizHR[40][9]=75;MatrizHR[40][10]=72;MatrizHR[40][11]=70;
         MatrizHR[40][12]=68;MatrizHR[40][13]=66;MatrizHR[40][14]=64;MatrizHR[40][15]=62;
         MatrizHR[40][16]=60;
}

/*----------------------------------------------------------------------------
  SysTick_Handler
 *----------------------------------------------------------------------------*/
void SysTick_Handler(void)
{
    SysTickCount++; 				/* increment counter necessary in Delay() */
}

void IniciarVariables(void){
	uint32_t j;
    Factor[0]=5300;  // globo
    Factor[1]=5300;  // bulbo humedo
    Factor[2]=0;
    Factor[3]=0;
    Factor[4]=5100;  // bulbo seco
    Raw0[0]=18000;    // globo
    Raw0[1]=19500;    // bulbo humedo
    Raw0[2]=0;
    Raw0[3]=0;
    Raw0[4]=28900;    // bulbo seco
}

uint32_t TomaMuestra(int A)
{
	uint32_t sumdata, lectura;
	uint8_t e;
    sumdata=0;

    for (e=0;e<100;e++)  // inicio de las 10 muestras para determinar la tara
    {
         lectura=ADC0Read(A);
         for(k=0;k<10;k++);
         sumdata = sumdata + ADC0Read(A);
    }
    lectura=(int)(sumdata/100);
    return(lectura);
}

void PrimeraLectura(int A) // A es el canal
{
	uint32_t sumdata, lectura;
	uint8_t e;
    sumdata=0;

    for (e=0;e<100;e++)  // inicio de las 10 muestras para determinar la tara
    {
         lectura=TomaMuestra(A);
         sumdata = sumdata + lectura;
    }
    LeePesado[A]=sumdata;
}

float LeerT(int A)
{
	  uint32_t lectura1, RawLeido;
      float Aux1;
      RawLeido=TomaMuestra(A);
      lectura1= (uint32_t)(RawLeido+0.99*LeePesado[A]);   //estaba en 0.9
      LeePesado[A]=lectura1;
      Aux1=(lectura1-Raw0[A])/Factor[A];  // sin redondeo
      return(Aux1);
}

void LeerRaw(int A)
{
	  uint32_t lectura1, RawLeido;
      float Aux1;
      RawLeido=TomaMuestra(A);
      lectura1= (uint32_t)(RawLeido+0.99*LeePesado[A]);   //estaba en 0.9
      LeePesado[A]=lectura1;
      //Aux1=(lectura1-Raw0[A])/Factor[A];  // sin redondeo
}

void PoneTemp(int A, float Temp){
    char deciChar[1];
    uint16_t auxiliar, decima, entero;
    char aux[10];
    char cadena [4];
    char enteChar[2];
    switch(A){
		case 0:
			strcpy(cadena,"TBS ");
			break;
		case 1:
			strcpy(cadena,"TBH ");
			break;
		case 2:
			strcpy(cadena,"TGBHin ");
			break;
		case 3:
			strcpy(cadena,"TGBHex ");
			break;
		case 4:
			strcpy(cadena," TG ");
			break;
		case 5:
			strcpy(cadena," HR: ");
			break;
		default:
			strcpy(cadena,"     ");
			break;
    }
    auxiliar = (int)(Temp*10);
    decima = auxiliar - ((int)(auxiliar/10))*10;
    itoa(decima, deciChar);
    entero = (int)Temp;
    itoa(entero, enteChar);
    if (entero < 10) strcat(cadena, "0");
	strcat(cadena, enteChar);
    if(A<5){
    	strcat(cadena, ".");
		strcat(cadena, deciChar);
    }
    else strcat(cadena, " %");
   	strcpy(mens3,cadena);
}

uint32_t TomaSegundos(void){
	uint32_t Absoluto;
	current_time = RTCGetTime();
	Absoluto = current_time.RTC_Sec + 60*current_time.RTC_Min+3600*current_time.RTC_Hour;
	Dia = current_time.RTC_Yday;
	Mes = current_time.RTC_Mon;
	Year = current_time.RTC_Year;
	Segundos = current_time.RTC_Sec;
	Minutos = current_time.RTC_Min;
	Hora = current_time.RTC_Hour;
	return(Absoluto);
}

void CalculaHR()
{
   int P,Q,n,salida;
   float H,Dif;
 /************************  HR calculo ***************************/
 /* como HR se calcula con Temp en grados celcius...
 se guarda la unidad actual y se pasa a Celcius, por ultimo se vuelve a la
 unidad original*/
// fin inicio HR........ continua calculo de HR.
      P=(int)(TBS+0.49);
      P=P-10;
      H=TBS-TBH;
      if(H<0.5 || H>8.5 || P>40)
      {
    	    HRentera=0;
    	    HR=0;
      }
      else
      {
            salida=0;
            n=0;
            do
            {
                 Dif=0.5+(0.5*n);
                 if(H>Dif){
                       n++;
                       if(n>16) salida=1;
                     }
                 else{
                       if((Dif-H)<=0.25){
                            Q=n;
                       }
                       else{
                            Q=n-1;
                       }
                       salida=1;
                 }

            }
            while(!salida);
            HRentera=MatrizHR[P][Q];  // descomentar
            HR=(float)HRentera;
      }
}

void EstadoLed(void){
	if(!encendido){
		LPC_GPIO0->FIOSET = (1 << 22); // enciende el led
		encendido=1;
	}
	else{
		LPC_GPIO0->FIOCLR = (1 << 22); // apaga el led
		encendido=0;
	}
}

void CompactaTemp(void){
uint16_t Tente;
	Tente = (int)(TBS*10); if(Tente<10) Tente+=90;
	itoa(Tente,mens3);
	Tente = (int)(TBH*10); if(Tente<10) Tente+=90;
	itoa(Tente,aux);
	strcat(mens3,aux);
	Tente = (int)(TG*10); if(Tente<10) Tente+=90;
	itoa(Tente,mens3);
	strcat(mens3,aux);
}
void PresentaValores(void){
	for(j=0;j<100;j++){
		TBS=LeerT(0);
		for(k=0;k<300;k++);
		TBH=LeerT(1);
		for(k=0;k<300;k++);
		TG=LeerT(4);
		for(k=0;k<300;k++);
	}
	GUI_Text_Draw_In_Dimmer ("o", WHITE, BLACK, 31,10);
	GUI_Text_Draw_In_Dimmer ("C", WHITE, BLACK, 39,12);
	GUI_Text_Draw_In_Dimmer ("o", WHITE, BLACK, 104,10);
	GUI_Text_Draw_In_Dimmer ("C", WHITE, BLACK, 112,12);
	TGBHIn = 0.7*TBH+0.3*TG; //(indoor)
	TGBHOut= 0.7*TBH+0.2*TG+0.1*TBS;//(outdoor)
	PoneTemp(0,TBS);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 1,26);
	PoneTemp(1,TBH);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 1,38);
	PoneTemp(4,TG);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 1,50);
	PoneTemp(2,TGBHIn);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 55,26);
	PoneTemp(3,TGBHOut);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 55,38);
//	CalculaHR();
	HR=72;
	PoneTemp(5,HR);
	GUI_Text_Draw_In_Dimmer (mens3, WHITE, BLACK, 60,52);
	if(ModoData){
		GUI_Text_Draw_In_Dimmer ("MD", WHITE, BLACK, 72,12);
		final= TomaSegundos();
		if((final-inicio)>=TMuestreo){
			EstadoLed();
			CompactaTemp();
			inicio=final;
		}
	}
}

int Teclado(void){
	val=0;
	LPC_GPIO2->FIOMASK = (~(15<<3));
	lectura=LPC_GPIO2->FIOPIN;
	val1 = (lectura >>3);
	val = 15-val1;
	return(val);
}

void PresentaTMuestreo(void){
	itoa(TMuestreo,mens3);
	if(TMuestreo<10){
		GUI_Text_Draw_In_Credits (mens3, WHITE, BLACK, 50,35);
		}else{
		GUI_Text_Draw_In_Credits (mens3, WHITE, BLACK, 49,35);
	}
}

void Tiempito(int Bilardo){
	int m;
	for(j=0;j<1000000;j++){
        for(m=0;m<Bilardo;m++){
        }
    }
}

void PoneFechaHora(void){
	  RTCInit();
/*	  local_time.RTC_Sec = 0;
	  local_time.RTC_Min = 0;
	  local_time.RTC_Hour = 5;
	  local_time.RTC_Mday = 8;
	  local_time.RTC_Wday = 3;
	  local_time.RTC_Yday = 6;		/* current date 07/12/2006
	  local_time.RTC_Mon = 11;
	  local_time.RTC_Year = 2014;*/
//	  RTCSetTime( local_time );		/* Set local time */
/*
	  alarm_time.RTC_Sec = 0;
	  alarm_time.RTC_Min = 0;
	  alarm_time.RTC_Hour = 0;
	  alarm_time.RTC_Mday = 1;
	  alarm_time.RTC_Wday = 0;
	  alarm_time.RTC_Yday = 1;		/* alarm date 01/01/2007
	  alarm_time.RTC_Mon = 1;
	  alarm_time.RTC_Year = 2007;
	  RTCSetAlarm( alarm_time );		/* set alarm time
*/
	  NVIC_EnableIRQ(RTC_IRQn);

	  /* mask off alarm mask, turn on IMYEAR in the counter increment interrupt
	  register */
	//  RTCSetAlarmMask(AMRSEC|AMRMIN|AMRHOUR|AMRDOM|AMRDOW|AMRDOY|AMRMON|AMRYEAR);
	  LPC_RTC->CIIR = IMMIN | IMYEAR;
	  /* 2007/01/01/00:00:00 is the alarm on */
	  RTCStart();
}


// Window "Home"	PANTALLA PRESENTACION
// Window "Credits" PANTALLA DATALOGGER
// Window "Dimmer"  PANTALLA PRINCIPAL
// Window "Menu"	PANTALLA MENU INICIAL
// Window "Example" PANTALLA APAGADO
int main(void)

{
	uint16_t seguir0, seguir1, seguir2,seguir3, seguir4;
	int cursor1, tecla0, tecla1, tecla2, tecla3, tecla4, tecla5;
	seguir0=1;
	seguir1=1;
	cursor1=0;
	seguir2=1;
	seguir3=1;
	seguir4=1;
	TMuestreo=5;
	ModoData=0;
	NumPantalla=0;
	CantMediciones=0;	// CUANDO GRABE HAY QUE SACARLO
	encendido=1;
	Calibracion=0;
	SystemInit();	//Called by startup code

    PoneFechaHora();

    LPC_PINCON->PINSEL1 &= (~(3 << 12));
    LPC_GPIO0->FIODIR |= (1 << 22);
    LPC_GPIO2->FIODIR |= (1 << 7);
	LPC_GPIO0->FIOSET = (1 << 22); // enciende el led

    LPC_GPIO2->FIODIR |= (0<<13);
    LPC_GPIO2->FIOPIN |= (1<<13);
    LPC_GPIO2->FIOPIN |= (1<<12);

    LPC_GPIO2->FIOMASK = (~(1<<7));
	LPC_GPIO2->FIOSET = (1 << 7); // enciende el led

	ADCInit(8000000);	// inicializa el ADC con velocidad de muestreo r√°pida
	CargaMatriz();
	IniciarVariables();
//	StartGUI ();
//	CreateGUI ();
//	GUI_Window_Draw ( "Home" );	//  PANTALLA PRESENTACION
	Tiempito(10);
//	GUI_Window_Draw ( "Dimmer" );	// PANTALLA PRINCIPAL
    PrimeraLectura(0);
	for(k=0;k<300;k++);
    PrimeraLectura(1);
	for(k=0;k<300;k++);
    PrimeraLectura(4);
	for(k=0;k<300;k++);
//	InitSysTick(1);
	UARTInit(1, 115200);
	UART1Count = 0;
	q=0;
	Dale=1;
	while (Dale)
	{
		MiraUART1();
	}
    return 0;

	while(seguir0) {	// seguir0 VALE SIEMPRE 1
		PresentaValores();
		tecla0=Teclado();
	    if(tecla0){			// si se pulsa una tecla entra en el menu Pantalla 1
	    	NumPantalla=1;
	    	Tiempito(1);
	    	GUI_Window_Draw ( "Menu" ); // PANTALLA MENU INICIAL
	    	Tiempito(5);
			seguir1=1;
			while(seguir1){
				GUI_Text_Draw_In_Menu ("=>", WHITE, BLACK, 2,12+13*cursor1);
				tecla1=Teclado();
				switch (tecla1){ 	// se pulsa una tecla en Pantalla 1
					case 1:	// CANCEL NO HACE NADA
						break;
					case 2:	// ABAJO
						cursor1 ++;
						Tiempito(5);
						if(cursor1==4) cursor1=0;
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,12);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,25);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,38);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,51);
						GUI_Text_Draw_In_Menu ("=>", WHITE, BLACK, 2,12+13*cursor1);
						break;
					case 4:	// ARRIBA
						cursor1 --;
						Tiempito(5);
						if(cursor1<0) cursor1=3;
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,12);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,25);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,38);
						GUI_Text_Draw_In_Menu ("  ", WHITE, BLACK, 2,51);
						GUI_Text_Draw_In_Menu ("=>", WHITE, BLACK, 2,12+13*cursor1);
						break;
					case 8:	// ENTER PANTALLA MENU
						switch(cursor1){
							case 0:		// Entra en Pantalla Datalogger
								seguir2=1;
								GUI_Window_Draw ( "Credits" );	// PANTALLA DATALOGGER
								Tiempito(5);
								PresentaTMuestreo();
								while(seguir2){
									tecla2=Teclado();
									switch (tecla2){ 	// se pulsa una tecla en Pant. Datalogger
					 					case 1:	// CANCEL NO HACE NADA
											seguir2=0;
											ModoData=0;
											GUI_Window_Draw ( "Menu" );
											break;
										case 2:	// ABAJO
											Tiempito(2);
											if(TMuestreo>1) TMuestreo --;
											PresentaTMuestreo();
											EstadoLed();
											break;
										case 4:	// ARRIBA
											Tiempito(2);
											TMuestreo ++;
											PresentaTMuestreo();
											EstadoLed();
											break;
										case 8: // ENTER
											Tiempito(5);
											GUI_Window_Draw ( "Credit2" );	// Pantalla confirma
											seguir3=1;
											while(seguir3){
												tecla3=Teclado();
												switch (tecla3){ 	// se pulsa una tecla en Confirma Datalogger
													case 1:	// CANCEL SALE SIN HACER NADA
														seguir3=0;
														seguir2=0;
														ModoData=0;
														GUI_Window_Draw ( "Menu" );
														Tiempito(5);
														break;
													case 8:	// ENTER INGRESA A DATALOGGER
														seguir3=0;
														seguir2=0;
														seguir1=0;
														ModoData=1;
														GUI_Window_Draw ( "Dimmer" );
														inicio=TomaSegundos();
														Tiempito(5);
														break;
													default:
														break;
												}	// Fin switch tecla3
											}// FIN WHILE seguir3
											break;
									}	// Fin switch tecla2
								}	// FIN WHILE seguir2
								break;
							case 1:		// COMUNICACION A PC
//								current_time = RTCGetTime();
								seguir4=1;
								GUI_Window_Draw ( "Credit3" ); // PANTALLA COMUNICACION
								while(seguir4){
									MiraUART1();
									tecla5=Teclado();
									if(tecla5==1){
										seguir4=0;
										GUI_Window_Draw ( "Menu" );
										Tiempito(5);
									}
								}
								break;
							case 2:
								seguir1=0;
								GUI_Window_Draw ( "Dimmer" ); // PANTALLA PRINCIPAL
								Tiempito(5);
								break;
							default:
								seguir1=0;
								GUI_Window_Draw ( "Example" ); // PANTALLA APAGADO
								Tiempito(5);
								LPC_GPIO2->FIOMASK = (~(1<<7));
								LPC_GPIO2->FIOCLR = (1 << 7); // apaga el led
								Tiempito(5);
								LPC_GPIO2->FIOMASK = (~(1<<7));
								LPC_GPIO2->FIOCLR = (1 << 7); // apaga el led
								Tiempito(5);
								LPC_GPIO2->FIOMASK = (~(1<<7));
								LPC_GPIO2->FIOCLR = (1 << 7); // apaga el led
								Tiempito(5);
								LPC_GPIO2->FIOMASK = (~(1<<7));
								LPC_GPIO2->FIOCLR = (1 << 7); // apaga el led
								break;
						}
				}	// FIN SWITCH tecla1
			}	// FIN WHILE seguir1
	    }
	}
	return 0;
}

void BorraYGraba(void){
	LPC_UART1->IER = IER_THRE | IER_RLS;
	/* Prepare the sector for erase */
	iap_status = (__e_iap_status) iap_prepare_sector(CONFIG_FLASH_SECTOR,
			(CONFIG_FLASH_SECTOR + CONFIG_FLASH_SECTOR_SIZE));
	if (iap_status != CMD_SUCCESS) UARTSend(1, (uint8_t *)"Error 1", 7 );
	/* Erase the sector */
	iap_status = (__e_iap_status) iap_erase_sector(CONFIG_FLASH_SECTOR,
			(CONFIG_FLASH_SECTOR + CONFIG_FLASH_SECTOR_SIZE));
	if (iap_status != CMD_SUCCESS) UARTSend(1, (uint8_t *)"Error 2", 7 );
	/* Prepare the sector for writing */
	iap_status = (__e_iap_status) iap_prepare_sector(CONFIG_FLASH_SECTOR,
			(CONFIG_FLASH_SECTOR + CONFIG_FLASH_SECTOR_SIZE));
	if (iap_status != CMD_SUCCESS) UARTSend(1, (uint8_t *)"Error 3", 7 );
	/* write data to flash */
	//iap_status = (__e_iap_status) iap_copy_ram_to_flash(&demo_messg, (void *)CONFIG_FLASH_OFFSET, 4096);//256);
	iap_status = (__e_iap_status) iap_copy_ram_to_flash(&stringMemory, (void *)CONFIG_FLASH_OFFSET, 4096);

	if (iap_status != CMD_SUCCESS) UARTSend(1, (uint8_t *)"Error 4", 7 );
  //  u32IAP_Compare(uint32_t u32DstAddr, uint32_t u32SrcAddr, uint32_t u32Len, uint32_t *pu32Offset);
	UARTSend(1, (uint8_t *)"Fin de codigo escritura en flash", 34 );
	UART1Count = 0;
	LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
}

void LeeMemoria(void){
	LPC_UART1->IER = IER_THRE | IER_RLS;
	GLCD_Bmp((uint8_t *)( CONFIG_FLASH_OFFSET));//+CONFIG_FLASH_SECTOR ));
	UARTSend(1, (uint8_t *)cadena, strlen(cadena) );
	UARTSend(1, (uint8_t *)"W", 3 );
	UART1Count = 0;
	LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
	LPC_GPIO0->FIOSET = (1 << 22); // Turn LED2 on
}

void BorraMemoria(){
	LPC_UART1->IER = IER_THRE | IER_RLS;
	UARTSend(1, (uint8_t *)UART1Buffer, UART1Count );
	strcpy(cadena,"");
	for(c=0; c<2*LARGO; c++) stringMemory[2*c] = cadena[c];
	UARTSend(1, (uint8_t *)stringMemory, strlen(stringMemory));
	UARTSend(1, (uint8_t *)"Fin de borrado en flash", 25 );
	UART1Count = 0;
	LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
}

void Concatena(void){
	LPC_UART1->IER = IER_THRE | IER_RLS;
	UARTSend(1, (uint8_t *)UART1Buffer, UART1Count );
	strcat(cadena, FechaHora);
	for(c=0; c<2*LARGO; c++) stringMemory[2*c] = cadena[c];
	UARTSend(1, (uint8_t *)stringMemory, strlen(stringMemory));
	UARTSend(1, (uint8_t *)"Fin de concatenado en flash", 29 );
	UART1Count = 0;
	LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
}

void EnviaInfo(void){
	LPC_UART1->IER = IER_THRE | IER_RLS;
	UARTSend(1, (uint8_t *)"S" ,1 );
	UARTSend(1, (uint8_t *)estafeta, strlen(estafeta) );
	UARTSend(1, (uint8_t *)"W" ,1 );
	UART1Count = 0;
	LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
}

void DesculaFH(void){
uint16_t m;
	while (estafeta[m] != '\0'){
	FH[m]=estafeta[m]-48;
	m++;
	}
	Dia=10*FH[1]+FH[2]; if(Dia>90) Dia -=90;
	Mes=10*FH[3]+FH[4]; if(Mes>90) Mes -=90;
	Year=10*FH[5]+FH[6]; Year +=2000;
	Hora=10*FH[7]+FH[8]; if(Hora>90) Hora -=90;
	Minutos=10*FH[9]+FH[10]; if(Minutos>90) Minutos -=90;
	Segundos=10*FH[11]+FH[12]; if(Segundos>90) Segundos -=90;
}

void RecibeFechaHora(){
	while(UART1Count<12){
//		while(UART1Buffer[q]!='J'){
		estafeta[q]=UART1Buffer[q];
		q++;
	}
	q=0;
	DesculaFH();
	UART1Count = 0;
}


void ConstruyeFH(void){
	current_time = RTCGetTime();
	DI=current_time.RTC_Yday;
	ME=current_time.RTC_Mon;
	AN=current_time.RTC_Year;
	HO=current_time.RTC_Hour;
	MI=current_time.RTC_Min;
	SE=current_time.RTC_Sec;

	strcpy(FechaHora, "");

	if(DI<10) DI +=90;
	itoa(DI, aux);
	strcat(FechaHora, aux);

	if(ME<10) ME +=90;
	itoa(ME, aux);
	strcat(FechaHora, aux);

	AN-=2000;
	itoa(AN, aux);
	strcat(FechaHora, aux);

	if(HO<10) HO+=90;
	itoa(HO, aux);
	strcat(FechaHora, aux);

	if(MI<10) MI+=90;
	itoa(MI, aux);
	strcat(FechaHora, aux);

	if(SE<10) SE+=90;
	itoa(SE, aux);
	strcat(FechaHora, aux);
}

void MiraUART1(void){
	if ( UART1Count != 0 )
	{
		switch(UART1Buffer[0]){
		case 'R':	// BORRA Y GRABA
			BorraYGraba();
		break;
		case 'T':	// LEE MEMORIA Y ENVIA A PC (TERMINA EN 'W')
			LeeMemoria();
		break;
		case 'B':	//Borrar
			BorraMemoria();
		break;
		case 'C':
			Concatena();
		break;
		case 'Y':
	//		strcpy(estafeta,"");
			RecibeFechaHora();
		break;
		case 'S':
			EnviaInfo();
		break;
		case 'X':
			LPC_UART1->IER = IER_THRE | IER_RLS;
			strcpy(estafeta,"");
			UART1Count = 0;
			LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
		break;
		default:
			{
			TBS++;
			TBH++;
			TG++;
			HR++;
			TGBHIn++;
			TGBHOut++;

			for(c=0; c<4*LARGO; c++) stringMemory[c]=32;

			ConstruyeFH();
			//                strcat(cadena, FechaHora);
			LPC_UART1->IER = IER_THRE | IER_RLS;
			UARTSend(1, (uint8_t *)UART1Buffer, UART1Count );
			UARTSend(1, (uint8_t *)FechaHora, strlen(FechaHora));
			UART1Count = 0;
			LPC_UART1->IER = IER_THRE | IER_RLS | IER_RBR;
		}
		break;
		}
	}
}

void StartGUI ()
{
	GUI_DefineHeapMalloc ( pvPortMalloc );
	GUI_DefineHeapFree ( vPortFree );
	GUI_StartLibrary ();
}

void CreateGUI ()
{
	// Window "Home"	PRESENTACION
	GUI_Window_Create ( "Home", "None", WHITE, "BOREAS", NULL, NULL, NULL );
	GUI_Text_Create ( "Home", "txtAp1", 48, 12, WHITE, "", BLACK, "GLCD Library" );
	GUI_Text_Create ( "Home", "txtAp2", 48, 23, WHITE, "", BLACK, "Campeon" );
	GUI_Text_Create ( "Home", "txtAp3", 48, 34, WHITE, "", BLACK, "Perfumo" );
	GUI_Button_Create ( "Home", "btnHome1", 12, 52, 60, 47, BLACK, "", WHITE, "Settings",
						wndHome_btnSettings_OnClik, NULL, NULL, NULL );
	GUI_Picture_Create ( "Home", "picFiuba1", 5, 16, 35, 40, fiuba, BLACK,
						 wndHome_picFiuba_OnClik );

	// Window "Credits" PANTALLA DATALOGGER
	GUI_Window_Create ( "Credits", "None", WHITE, "", NULL, NULL, NULL );
	GUI_Text_Create ( "Credits", "txtInfo6", 5, 1, BLACK, "", WHITE, " SETEO DATALOGGER" );
	GUI_Text_Create ( "Credits", "txtInfo3", 5, 50, WHITE, "", BLACK, "<ENTER> / <CANCEL>   " );

	// Window "Credit2" PANTALLA CONFIRMA DATALOGGER
	GUI_Window_Create ( "Credit2", "None", WHITE, "", NULL, NULL, NULL );
	GUI_Text_Create ( "Credit2", "txtInfo6", 5, 1, BLACK, "", WHITE, " CONFIRMA" );
	GUI_Text_Create ( "Credit2", "txtInfo3", 5, 50, WHITE, "", BLACK, "<si> / <NO>   " );

	// Window "Credit3" PANTALLA COMUNICACION PC
	GUI_Window_Create ( "Credit3", "None", WHITE, "", NULL, NULL, NULL );
	GUI_Text_Create ( "Credit3", "txtInfo6", 5, 1, BLACK, "", WHITE, " COMUNICACION A PC" );
	GUI_Text_Create ( "Credit3", "txtInfo3", 5, 50, WHITE, "", BLACK, "SALIR   => <CANCEL> " );

	// Window "Menu"
	GUI_Window_Create ( "Menu", "None", WHITE, "", NULL, NULL, NULL );
	GUI_Text_Create ( "Menu", "txtInfo6", 5, 1, BLACK, "", WHITE, "       MENU" );
	GUI_Text_Create ( "Menu", "txto44", 20, 12, WHITE, "", BLACK, "DATALOGGER" );
	GUI_Text_Create ( "Menu", "txto45", 20, 25, WHITE, "", BLACK, "SISTEMA" );
	GUI_Text_Create ( "Menu", "txto46", 20, 38, WHITE, "", BLACK, "PANTALLA PRINCIPAL" );
	GUI_Text_Create ( "Menu", "txto46", 20, 51, WHITE, "", BLACK, "SALIR" );

	// Window "Example"
	GUI_Window_Create ( "Example", "", WHITE, "", NULL, NULL, NULL );
	GUI_Text_Create ( "Example", "", 25, 23, WHITE, "", BLACK, " APAGANDO " );
	GUI_Text_Create ( "Example", "", 25, 43, WHITE, "", BLACK, "  NS 234 " );

	// Window "Dimmer"
	GUI_Window_Create ( "Dimmer", "", WHITE, "" ,NULL, NULL, NULL );
	GUI_Text_Create ( "Dimmer", "txt0", 3, 1, BLACK, "", WHITE, "VALORES ENCONTRADOS" );

}

void wndHome_btnSettings_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Menu" );
}

void wndHome_picFiuba_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Credits" );
}

void wndCredits_btnBack_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Home" );
}

void wndMenu_btnExample_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Example" );
}

void wndMenu_btnDimmer_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Dimmer" );
}

void wndMenu_btnBack_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Home" );
}

void wndExample_btnBack_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Menu" );
}

void wndExample_btnChange_OnClik (void* paramater)
{
	TText* pText;

	// Get the GUI's object
	pText = (TText*) GUI_Window_SearchObject ("txtLed");
	if ( strcmp (pText->text, " LED OFF ") == 0 )
	{
		pText->text = " LED ON ";
		LPC_GPIO0->FIODIR |= (1<<18);
		LPC_GPIO0->FIOSET = (1<<18);
	}
	else
	{
		pText->text = " LED OFF ";
		LPC_GPIO0->FIODIR |= (1<<18);
		LPC_GPIO0->FIOCLR = (1<<18);
	}
}

void wndDimmer_tsLivinL1_OnChange ( void* parameter )
{

}

void wndDimmer_tsBedroomL1_OnChange ( void* parameter )
{

}

void wndDimmer_btnBack_OnClik ( void* parameter )
{
	GUI_Window_Draw ( "Menu" );
}

void EINT3_IRQHandler (void)
{
	portBASE_TYPE xHigherPriorityTaskWoken;

	NVIC_DisableIRQ(EINT3_IRQn); 			// Disable the interrupt

	LPC_SC->EXTINT = EINT3; 				// Clear the external interrupt flag
	LPC_GPIOINT->IO0IntClr = 0x01000000; 	// Clear the specific pin interrupt flag

	// Give semaphore
	xSemaphoreGiveFromISR (semaphore_TouchInterrupt, &xHigherPriorityTaskWoken);
}

void ConfigExternalInterrupt ( )
{
	// Configuration of the external interrupt
	LPC_GPIOINT->IO0IntEnF = 0x01000000; 	// Port0.24 (falling edge)
	LPC_SC->EXTMODE = EINT3_EDGE; 			// INT3 edge trigger
	LPC_SC->EXTPOLAR = 0;					// INT3 is falling edge

	// Enable the external interrupt
	NVIC_EnableIRQ(EINT3_IRQn);				// Enable the interrupt
	LPC_SC->EXTINT = EINT3; 				// Clear the external interrupt flag
	LPC_GPIOINT->IO0IntClr = 0x01000000; 	// Clear the specific pin interrupt flag
}

void Task_TouchPanel( void *pvParameters )
{
	portTickType xLastWakeTime;
	uint8_t isEventDetected = 0;
	TouchPanel_TEvent event;
	GLCDgui_TEvent GUIEvent;
	int a;

	for( ;; )
	{
		// Take semaphore
		xSemaphoreTake (semaphore_TouchInterrupt, portMAX_DELAY);

		// Execute until an event is detected
		do
		{
			// TouchPanel_Read must be invoked some times to determine if an event exist
			isEventDetected = TouchPanel_Read ( &(event) );

			// Delay until execute TouchPanel_Read again
			vTaskDelay (50/portTICK_RATE_MS);

		} while ( isEventDetected == 0 );

		// When the do-while stop the event must be raised using the GUI library
		switch (event.eventType)
		{
			case CLICK:
				GUIEvent.xCoordinate = event.xCoordinate;
				GUIEvent.yCoordinate = event.yCoordinate;
				GUIEvent.eventType = GLCD_CLICK;
				GUI_Window_RaiseEvent (&GUIEvent);
				GUI_Window_RedrowActiveWindow ();
			break;

			case DOUBLECLICK:

			break;

			case SCROLL_LEFTTORIGHT:
				GUIEvent.xCoordinate = event.xCoordinate;
				GUIEvent.yCoordinate = event.yCoordinate;
				GUIEvent.eventType = GLCD_SCROLL_LEFTTORIGHT;
				GUI_Window_RaiseEvent (&GUIEvent);
			break;

			case SCROLL_RIGHTTOLEFT:
			break;

			case DRAG:
			break;

			case DROP:
			break;

			case NOEVENT:
				a = 2;
			break;
		}

		isEventDetected = 0;

		// Start and configure the external interrupt
		ConfigExternalInterrupt ( );
	}
}

void vApplicationMallocFailedHook ( void )
{
	for( ;; );
}

void vApplicationStackOverflowHook ( xTaskHandle *pxTask, signed char *pcTaskName )
{
	for( ;; );
}

void vApplicationIdleHook ( void )
{

}

void vApplicationTickHook ( void )
{

}
